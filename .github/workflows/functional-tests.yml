name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and export
      uses: docker/build-push-action@v2
      with:
        context: infra/
        tags: infra-runner:latest
        outputs: type=docker,dest=/tmp/infra-runner.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: infra-runner
        path: /tmp/infra-runner.tar
  build:
    needs: setup
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: infra-runner
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/infra-runner.tar
      - run: >-
          docker run --rm
          -e AWS_ACCESS_KEY_ID 
          -e AWS_SECRET_ACCESS_KEY
          -v "$(pwd)/infra/ansible:/root/infra/ansible"
          -v "$(pwd)/infra/terraform:/root/infra/terraform"
          -w "/root/infra/terraform"
          infra-runner
          terraform init
      - run: >-
          docker run --rm
          -e AWS_ACCESS_KEY_ID 
          -e AWS_SECRET_ACCESS_KEY
          -v "$(pwd)/infra/ansible:/root/infra/ansible"
          -v "$(pwd)/infra/terraform:/root/infra/terraform"
          -w "/root/infra/terraform"
          infra-runner
          terraform apply --auto-approve
      - uses: actions/upload-artifact@v2
        with:
          name: terraform-state
          path: infra/terraform/terraform.tfstate   
      - name: Display files
        run: >-
          docker run --rm
          -e AWS_ACCESS_KEY_ID 
          -e AWS_SECRET_ACCESS_KEY
          -v "$(pwd)/infra/ansible:/root/infra/ansible"
          -v "$(pwd)/infra/terraform:/root/infra/terraform"
          -w "/root/infra/terraform"
          infra-runner
          ls -R ../
      - name: Display host file
        run: >-
          docker run --rm
          -e AWS_ACCESS_KEY_ID 
          -e AWS_SECRET_ACCESS_KEY
          -v "$(pwd)/infra/ansible/etc:/etc/ansible"
          -v "$(pwd)/infra/ansible:/root/infra/ansible"
          -v "$(pwd)/infra/terraform:/root/infra/terraform"
          -w "/root/infra/terraform"
          infra-runner
          cat /etc/ansible/hosts
      - name: Run Ansible and Functional Tests
        run: >-
          docker run --rm
          -e AWS_ACCESS_KEY_ID 
          -e AWS_SECRET_ACCESS_KEY
          -v "$(pwd)/infra/ansible/etc:/etc/ansible"
          -v "$(pwd)/infra/ansible:/root/infra/ansible"
          -v "$(pwd)/infra/terraform:/root/infra/terraform"
          -w "/root/infra/terraform"
          infra-runner
          ansible-playbook ../ansible/playbook.yaml -vvv
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: echo "Hello World"
  destroy:
    if: ${{ always() }}
    needs: test
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
          name: terraform-state
          path: infra/terraform
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: infra-runner
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/infra-runner.tar
      - run: >-
          docker run --rm
          -e AWS_ACCESS_KEY_ID 
          -e AWS_SECRET_ACCESS_KEY
          -v "$(pwd)/infra/ansible:/root/infra/ansible"
          -v "$(pwd)/infra/terraform:/root/infra/terraform"
          -w "/root/infra/terraform"
          infra-runner
          terraform init
      - run: >-
          docker run --rm
          -e AWS_ACCESS_KEY_ID 
          -e AWS_SECRET_ACCESS_KEY
          -v "$(pwd)/infra/ansible:/root/infra/ansible"
          -v "$(pwd)/infra/terraform:/root/infra/terraform"
          -w "/root/infra/terraform"
          infra-runner
          terraform destroy --auto-approve
